{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\webpages\\\\navbar\\\\react-narbar\\\\src\\\\components\\\\SubMenu.js\",\n    _s = $RefreshSig$();\n\nimport { isTemplateElement } from '@babel/types';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NavbarLink = styled(Link)`\n display: flex;\n color: #e1e9fc;\n justify-content: space-between;\n align-items: center;\n padding: 20px;\n list-style: none;\n height: 60px;\n text-decoration: none;\n font-size: 18px;\n\n &:hover{\n     bacground: #252831;\n     border-left: 1px solid #632ce4;\n     \n }\n`;\n_c = NavbarLink;\nconst NavbarLabel = styled.span`\n margin-left: 16px;\n`;\n_c2 = NavbarLabel;\nconst DropdownLink = styled(Link)`\n bacground: #414757;\n height: 0px;\n padding-left: 3rem;\n display: flex;\n align-items: center;\n text-decorations: none;\n color: #f5f5f5;\n font-size: 18px;\n`;\n_c3 = DropdownLink;\n\nconst SubMenu = ({\n  item\n}) => {\n  _s();\n\n  const [subnav, setSubnav] = useState(false);\n\n  const showSubnav = () => setSubnav(!subnav);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavbarLink, {\n      to: item.path,\n      onClick: item.subNav && showSubnav,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [item.icon, /*#__PURE__*/_jsxDEV(NavbarLabel, {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: item.subNav && subnav ? item.iconOpened : item.subNav ? item.iconClosed : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), subnav && item.subNav.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(DropdownLink, {\n        to: item.path,\n        children: [item.icon, /*#__PURE__*/_jsxDEV(NavbarLabel, {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(SubMenu, \"g8hLp77WQ+uaQWkY1LswmpimdZ8=\");\n\n_c4 = SubMenu;\nexport default SubMenu;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"NavbarLink\");\n$RefreshReg$(_c2, \"NavbarLabel\");\n$RefreshReg$(_c3, \"DropdownLink\");\n$RefreshReg$(_c4, \"SubMenu\");","map":{"version":3,"sources":["C:/projects/webpages/navbar/react-narbar/src/components/SubMenu.js"],"names":["isTemplateElement","React","useState","Link","styled","NavbarLink","NavbarLabel","span","DropdownLink","SubMenu","item","subnav","setSubnav","showSubnav","path","subNav","icon","title","iconOpened","iconClosed","map","index"],"mappings":";;;AAAA,SAASA,iBAAT,QAAkC,cAAlC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,UAAU,GAAGD,MAAM,CAACD,IAAD,CAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;KAAME,U;AAkBN,MAAMC,WAAW,GAAGF,MAAM,CAACG,IAAK;AAChC;AACA,CAFA;MAAMD,W;AAIN,MAAME,YAAY,GAAGJ,MAAM,CAACD,IAAD,CAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMK,Y;;AAWN,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAAA;;AACzB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMW,UAAU,GAAG,MAAMD,SAAS,CAAC,CAACD,MAAF,CAAlC;;AAEA,sBACI;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,EAAE,EAAED,IAAI,CAACI,IAArB;AAA2B,MAAA,OAAO,EAAEJ,IAAI,CAACK,MAAL,IAAeF,UAAnD;AAAA,8BACI;AAAA,mBACKH,IAAI,CAACM,IADV,eAEI,QAAC,WAAD;AAAA,oBAAcN,IAAI,CAACO;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA,kBACKP,IAAI,CAACK,MAAL,IAAeJ,MAAf,GACCD,IAAI,CAACQ,UADN,GAECR,IAAI,CAACK,MAAL,GACAL,IAAI,CAACS,UADL,GAEA;AALN;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAcKR,MAAM,IAAID,IAAI,CAACK,MAAL,CAAYK,GAAZ,CAAgB,CAACV,IAAD,EAAMW,KAAN,KAAe;AACtC,0BACI,QAAC,YAAD;AAAc,QAAA,EAAE,EAAEX,IAAI,CAACI,IAAvB;AAAA,mBACKJ,IAAI,CAACM,IADV,eAEI,QAAC,WAAD;AAAA,oBAAcN,IAAI,CAACO;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,SAAkCI,KAAlC;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH,KAPU,CAdf;AAAA,kBADJ;AAyBH,CA9BD;;GAAMZ,O;;MAAAA,O;AAgCN,eAAeA,OAAf","sourcesContent":["import { isTemplateElement } from '@babel/types'\r\nimport React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nconst NavbarLink = styled(Link)`\r\n display: flex;\r\n color: #e1e9fc;\r\n justify-content: space-between;\r\n align-items: center;\r\n padding: 20px;\r\n list-style: none;\r\n height: 60px;\r\n text-decoration: none;\r\n font-size: 18px;\r\n\r\n &:hover{\r\n     bacground: #252831;\r\n     border-left: 1px solid #632ce4;\r\n     \r\n }\r\n`;\r\n\r\nconst NavbarLabel = styled.span`\r\n margin-left: 16px;\r\n`;\r\n\r\nconst DropdownLink = styled(Link)`\r\n bacground: #414757;\r\n height: 0px;\r\n padding-left: 3rem;\r\n display: flex;\r\n align-items: center;\r\n text-decorations: none;\r\n color: #f5f5f5;\r\n font-size: 18px;\r\n`;\r\n\r\nconst SubMenu = ({ item }) =>{\r\n    const [subnav, setSubnav] = useState(false)\r\n\r\n    const showSubnav = () => setSubnav(!subnav)\r\n\r\n    return(\r\n        <>\r\n            <NavbarLink to={item.path} onClick={item.subNav && showSubnav}>\r\n                <div>\r\n                    {item.icon}\r\n                    <NavbarLabel>{item.title}</NavbarLabel>\r\n                </div>\r\n                <div>\r\n                    {item.subNav && subnav \r\n                    ? item.iconOpened \r\n                    : item.subNav \r\n                    ? item.iconClosed \r\n                    : null}\r\n                </div>\r\n            </NavbarLink>\r\n            {subnav && item.subNav.map((item,index) =>{\r\n                return (\r\n                    <DropdownLink to={item.path} key={index}>\r\n                        {item.icon}\r\n                        <NavbarLabel>{item.title}</NavbarLabel>\r\n                    </DropdownLink>\r\n                )\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SubMenu"]},"metadata":{},"sourceType":"module"}